<?php
	require_once('nimble/generators/lib/generator.php');
	require_once('nimble/lib/support/inflector.php');
	
	define('NIMBLE_ROOT', getcwd());
	
	if(count($argv) < 2) {
		display_Help();
	}
	
	
	function display_help() {
        $root = NIMBLE_ROOT;
		$usage = <<<EOu
Generator utility for nimble objects

Usage: php nimble/bin/generate (model|controller|test|mailer) [args] 

current root: {$root}

EOu;
        die($usage);
	}
	
	
	switch($argv[1]) {
	
		case 'controller':
			Generator::controller(Inflector::classify($argv[2]));
		break;
		
		
		case 'model':
			if(isset($argv[3])) {
				$parent = $argv[3];
			}else{
				$parent = '';
			}
			Generator::model($argv[2], $parent);
		break;
		
		
		case 'test':
            if(!isset($argv[2]))
                die ("Please supply a test type, 'functional', or 'unit'\n");

            $res = false;
			switch($argv[2]) {
				case 'functional':
					if(!isset($argv[3])) {
						die("Please supply a test name\n");
					}
					$res = Generator::functional_test($argv[3]);
				break;
				case 'unit':
					if(!isset($argv[3])) {
						die("Please supply a test name\n");
					}
					$res = Generator::unit_test($argv[3]);
				break;
			}
            if ($res) echo "Wrote $argv[2] test to $res\n";
		break;
		case 'help':
			echo Generator::help();
			exit();
		break;
		case 'mailer':
			$new = $argv;
			$methods = array_splice($new, 3);
		 	$methods = empty($methods) ? array('foo') : $methods;
			Generator::mailer($argv[2], $methods);
			exit();
		break;
	
	
	
	}
	
	
	
	
	
	
	
	
	
	

?>
